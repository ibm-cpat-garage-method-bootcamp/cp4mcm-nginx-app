apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  labels: 
    package: app
    application: nginx-app
  annotations:
    app.ibm.com/is-local-deployable: "false"
    app.ibm.com/deployable-version: "1.0.0"
  name: nginx-deploy
  namespace: nginx-channel
spec:
  template:
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
      labels:
        app: nginx-app
        release: nginx-app
      name: nginx-app-deployment
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: nginx-app
          release: nginx-app
      strategy:
        rollingUpdate:
          maxSurge: 100%
          maxUnavailable: 0
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: nginx-app
            release: nginx-app
          name: nginx-app
        spec:
          containers:
          - image: docker.io/twalter/openshift-nginx:latest
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: service
                scheme: HTTP
              initialDelaySeconds: 5
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 1
            name: nginx-app
            ports:
            - containerPort: 80
              name: service
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /
                port: service
                scheme: HTTP
              initialDelaySeconds: 5
              periodSeconds: 15
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                cpu: 500m
                memory: 512Mi
              requests:
                cpu: 250m
                memory: 128Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
---
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  labels:
    package: config
    app: nginx-app
  annotations:
    app.ibm.com/is-local-deployable: "false"
    app.ibm.com/deployable-version: "1.1.0"
  name: nginx-service-110
  namespace: nginx-channel
  generateName: nginx-service
spec:
  template:
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: nginx-app 
        release: nginx-app
      name: nginx-svc
    spec:
      externalTrafficPolicy: Cluster
      ports:
      - name: service
        nodePort: 80
        port: 80
        protocol: TCP
        targetPort: 80
      selector:
        app: nginx-app
        release: nginx-app
      sessionAffinity: None
      type: NodePort
---
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  labels:
    package: config
    app: nginx-app
  annotations:
    app.ibm.com/is-local-deployable: "false"
    app.ibm.com/deployable-version: "1.1.0"
  name: nginx-route-110
  namespace: nginx-channel
spec:
  template:
    kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: nginx-route
      labels:
        app: nginx
      annotations:
        openshift.io/host.generated: 'true'
    spec:
      to:
        kind: Service
        name: nginx-svc
        weight: 100
      port:
        targetPort: 80
      wildcardPolicy: None
